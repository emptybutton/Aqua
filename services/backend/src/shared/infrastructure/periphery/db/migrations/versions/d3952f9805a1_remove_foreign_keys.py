"""remove foreign keys

Revision ID: d3952f9805a1
Revises: 69b6ca49eeda
Create Date: 2024-10-08 13:05:59.155218

"""

from typing import Sequence, Union

from alembic import op


# revision identifiers, used by Alembic.
revision: str = "d3952f9805a1"
down_revision: Union[str, None] = "69b6ca49eeda"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("aqua_users_id_fkey", "aqua_users", type_="foreignkey")
    op.drop_constraint(
        "auth_previous_usernames_user_id_fkey",
        "auth_previous_usernames",
        type_="foreignkey",
    )
    op.drop_constraint("days_user_id_fkey", "days", type_="foreignkey")
    op.drop_constraint("records_user_id_fkey", "records", type_="foreignkey")
    op.drop_constraint("sessions_user_id_fkey", "sessions", type_="foreignkey")
    op.drop_constraint(
        "sessions_next_session_id_fkey", "sessions", type_="foreignkey"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_foreign_key(
        "sessions_next_session_id_fkey",
        "sessions",
        "sessions",
        ["next_session_id"],
        ["id"],
    )
    op.create_foreign_key(
        "sessions_user_id_fkey", "sessions", "auth_users", ["user_id"], ["id"]
    )
    op.create_foreign_key(
        "records_user_id_fkey", "records", "aqua_users", ["user_id"], ["id"]
    )
    op.create_foreign_key(
        "days_user_id_fkey", "days", "aqua_users", ["user_id"], ["id"]
    )
    op.create_foreign_key(
        "auth_previous_usernames_user_id_fkey",
        "auth_previous_usernames",
        "auth_users",
        ["user_id"],
        ["id"],
    )
    op.create_foreign_key(
        "aqua_users_id_fkey", "aqua_users", "auth_users", ["id"], ["id"]
    )
    # ### end Alembic commands ###
